"""empty message

Revision ID: 58c0ec1c1efe
Revises: 36811fc4bfdf
Create Date: 2023-11-14 18:00:53.960815

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '58c0ec1c1efe'
down_revision = '36811fc4bfdf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('Author_id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=20), nullable=True),
    sa.Column('Email', sa.String(length=30), nullable=True),
    sa.Column('Phone_number', sa.String(length=20), nullable=True),
    sa.Column('Status', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('Author_id')
    )
    op.create_table('language',
    sa.Column('Language_id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('Language_id')
    )
    op.create_table('member',
    sa.Column('Member_id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=10), nullable=True),
    sa.Column('Branch_Code', sa.Integer(), nullable=True),
    sa.Column('Roll_Number', sa.Integer(), nullable=True),
    sa.Column('phone_Number', sa.String(length=20), nullable=True),
    sa.Column('Email', sa.String(length=30), nullable=True),
    sa.Column('Date_of_join', sa.Date(), nullable=True),
    sa.Column('Status', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('Member_id')
    )
    op.create_table('book_author',
    sa.Column('Book_id', sa.Integer(), nullable=False),
    sa.Column('Author_id', sa.Integer(), nullable=False),
    sa.Column('AUTHOR_Author_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['AUTHOR_Author_id'], ['author.Author_id'], ),
    sa.PrimaryKeyConstraint('Book_id', 'Author_id')
    )
    op.create_table('book',
    sa.Column('Book_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('MRP', sa.Float(), nullable=True),
    sa.Column('Publisher_id', sa.Integer(), nullable=False),
    sa.Column('publish_date', sa.Date(), nullable=True),
    sa.Column('volume', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('Title', sa.String(length=10), nullable=True),
    sa.Column('BOOK_AUTHOR_Book_id', sa.Integer(), nullable=True),
    sa.Column('BOOK_AUTHOR_Author_id', sa.Integer(), nullable=True),
    sa.Column('LANGUAGE_Language_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['BOOK_AUTHOR_Author_id'], ['book_author.Author_id'], ),
    sa.ForeignKeyConstraint(['BOOK_AUTHOR_Book_id'], ['book_author.Book_id'], ),
    sa.ForeignKeyConstraint(['LANGUAGE_Language_id'], ['language.Language_id'], ),
    sa.PrimaryKeyConstraint('Book_id', 'language_id', 'Publisher_id')
    )
    op.create_table('book_issue',
    sa.Column('Issue_id', sa.Integer(), nullable=False),
    sa.Column('Date_of_issue', sa.Date(), nullable=True),
    sa.Column('Book_id', sa.Integer(), nullable=True),
    sa.Column('Member_id', sa.Integer(), nullable=True),
    sa.Column('Expected_date_of_return', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('MEMBER_Member_id', sa.Integer(), nullable=True),
    sa.Column('BOOK_Book_id', sa.Integer(), nullable=True),
    sa.Column('BOOK_language_id', sa.Integer(), nullable=True),
    sa.Column('BOOK_Publisher_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['BOOK_Book_id'], ['book.Book_id'], ),
    sa.ForeignKeyConstraint(['BOOK_Publisher_id'], ['book.Publisher_id'], ),
    sa.ForeignKeyConstraint(['BOOK_language_id'], ['book.language_id'], ),
    sa.ForeignKeyConstraint(['MEMBER_Member_id'], ['member.Member_id'], ),
    sa.PrimaryKeyConstraint('Issue_id')
    )
    op.create_table('publisher',
    sa.Column('publisher_id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=20), nullable=True),
    sa.Column('Address', sa.String(length=20), nullable=True),
    sa.Column('BOOK_Book_id', sa.Integer(), nullable=True),
    sa.Column('BOOK_language_id', sa.Integer(), nullable=True),
    sa.Column('BOOK_Publisher_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['BOOK_Book_id'], ['book.Book_id'], ),
    sa.ForeignKeyConstraint(['BOOK_Publisher_id'], ['book.Publisher_id'], ),
    sa.ForeignKeyConstraint(['BOOK_language_id'], ['book.language_id'], ),
    sa.PrimaryKeyConstraint('publisher_id')
    )
    op.create_table('book_return',
    sa.Column('issue_id', sa.Integer(), nullable=False),
    sa.Column('Actual_date_of_return', sa.Date(), nullable=True),
    sa.Column('LateDays', sa.Integer(), nullable=True),
    sa.Column('LateFee', sa.Integer(), nullable=True),
    sa.Column('BOOK_ISSUE_Issue_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['BOOK_ISSUE_Issue_id'], ['book_issue.Issue_id'], ),
    sa.PrimaryKeyConstraint('issue_id')
    )
    op.drop_table('library')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('library',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('book_name', sa.VARCHAR(length=20), nullable=False),
    sa.Column('author_name', sa.VARCHAR(length=20), nullable=False),
    sa.Column('status', sa.VARCHAR(length=15), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('book_return')
    op.drop_table('publisher')
    op.drop_table('book_issue')
    op.drop_table('book')
    op.drop_table('book_author')
    op.drop_table('member')
    op.drop_table('language')
    op.drop_table('author')
    # ### end Alembic commands ###
